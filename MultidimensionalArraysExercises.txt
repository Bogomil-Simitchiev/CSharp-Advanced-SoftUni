int n = int.Parse(Console.ReadLine());

            int[,] matrix = new int[n, n];
            for (int i = 0; i < n; i++)
            {
                string[] input = Console.ReadLine().Split(" ");

                for (int j = 0; j < n; j++)
                {
                    matrix[i, j] = int.Parse(input[j]);
                }
            }

            int sumPrDiagonal = 0;
            int sumSecDiagonal = 0;


            for (int i = 0; i < matrix.GetLength(0); i++)
            {
                for (int j = 0; j < matrix.GetLength(1); j++)
                {
                    if (i==j)
                    {
                        sumPrDiagonal += matrix[i, j];
                    }
 
                }
               
            }
            for (int i = 0; i < matrix.GetLength(1); i++)
            {
                for (int j = 0; j < matrix.GetLength(0); j++)
                {
                    if ((i+j)==(n-1))
                    {
                        sumSecDiagonal += matrix[i, j];
                    }

                }


            }

            int bigger = Math.Max(sumPrDiagonal, sumSecDiagonal);
            int smaller = Math.Min(sumPrDiagonal, sumSecDiagonal);

            Console.WriteLine(bigger-smaller);

---

//read rows and cols

            int[] input = Console.ReadLine().Split(" ").Select(int.Parse).ToArray();

            int rows = input[0];
            int cols = input[1];

            char[,] matrix = new char[rows, cols];

            for (int i = 0; i < rows; i++)
            {
                string[] text = Console.ReadLine().Split(" ");

                for (int j = 0; j < cols; j++)
                {
                    matrix[i, j] = char.Parse(text[j]);
                }
            }

            int countOfSquares = 0;

            for (int i = 0; i < rows-1; i++)
            {
                for (int j = 0; j < cols-1; j++)
                {
                    if ((matrix[i,j]==matrix[i,j+1])&&(matrix[i,j]==matrix[i+1,j])&&(matrix[i,j]==matrix[i+1,j+1]))
                    {
                        countOfSquares++;
                    }
                }
            }
            Console.WriteLine(countOfSquares);

---

int[] input = Console.ReadLine().Split(" ").Select(int.Parse).ToArray();

            int rows = input[0];
            int cols = input[1];

            int[,] matrix = new int[rows, cols];

            for (int i = 0; i < rows; i++)
            {
                int[] numbers = Console.ReadLine().Split(" ",StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToArray();

                for (int j = 0; j < cols; j++)
                {
                    matrix[i,j]= numbers[j];
                }
            }

            int sum = 0;

            int currentRow = 0;
            int currentCol = 0;

            for (int i = 0; i < matrix.GetLength(0)-2; i++)
            {
                for (int j = 0; j < matrix.GetLength(1)-2; j++)
                {
                    int currentSum =0;                  

                    for (int k = i; k < i+3; k++)
                    {
                        for (int r = j; r < j+3; r++)
                        {
                            currentSum += matrix[k, r];
                        }
                    }
                    if (currentSum > sum)
                    {
                        sum = currentSum;
                        currentRow = i;
                        currentCol = j;
                       
                    }

                }
            }

            Console.WriteLine($"Sum = {sum}");
           

            for (int i = currentRow; i < currentRow+3; i++)
            {
                for (int j = currentCol; j < currentCol+3; j++)
                {
                    Console.Write(matrix[i,j]+" ");
                }
                Console.WriteLine();
            }

---

int[] input = Console.ReadLine().Split(" ").Select(int.Parse).ToArray();

            int rows = input[0];
            int cols = input[1];

            string[,] matrix = new string[rows, cols];

            for (int i = 0; i < rows; i++)
            {
                string[] inputNumbers = Console.ReadLine().Split(" ");
                for (int j = 0; j < cols; j++)
                {
                    matrix[i, j] = inputNumbers[j];
                }
            }

            string command = Console.ReadLine();
            while (command!="END")
            {

                string[] splited = command.Split(" ");

                string firstCommand = splited[0];

                if (firstCommand=="swap"&&splited.Length==5)
                {
                    int row1 = int.Parse(splited[1]);
                    int col1 = int.Parse(splited[2]);
                    int row2 = int.Parse(splited[3]);
                    int col2 = int.Parse(splited[4]);
                    if (rows-1>=row1&&row1>=0&&rows-1>=row2&&row2>=0&&cols-1>=col1&&col1>=0&&cols-1>=col2&&col2>=0)
                    {
                        var temp = matrix[row1, col1];
                        matrix[row1, col1] = matrix[row2, col2];
                        matrix[row2, col2] = temp;

                        for (int i = 0; i < rows; i++)
                        {
                            for (int j = 0; j < cols; j++)
                            {
                                Console.Write($"{matrix[i,j]} ");
                            }
                            Console.WriteLine();
                        }
                       
                    }
                    else
                    {
                        Console.WriteLine("Invalid input!");
                    }

                }
                else
                {
                    Console.WriteLine("Invalid input!");
                }

                command = Console.ReadLine();
            }
