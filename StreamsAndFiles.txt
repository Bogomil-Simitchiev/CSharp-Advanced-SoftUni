using StreamReader sr = new StreamReader(@"..\..\..\input.txt");
            using StreamWriter sw = new StreamWriter(@"..\..\..\output.txt");

            int count = 1;

            string line = sr.ReadLine();
            while (line!=null)
            {
                if (count%2!=1)
                {
                    sw.WriteLine(line);
                }

                count++;
                line = sr.ReadLine();
            }

---

 using StreamReader sr = new StreamReader(@"..\..\..\input.txt");
            using StreamWriter sw = new StreamWriter(@"..\..\..\output.txt");

            int count = 1;

            string line = sr.ReadLine();
            while (line!=null)
            {

                sw.WriteLine($"{count}. {line}");
                count++;
                line = sr.ReadLine();
            }
---


            Dictionary<string, int> wordsCount = new Dictionary<string, int>();

            string[] words = File.ReadAllLines(@"..\..\..\words.txt");
            string[] text = File.ReadAllLines(@"..\..\..\text.txt");

            foreach (var item in words)
            {
                if (!wordsCount.ContainsKey(item))
                {
                    wordsCount.Add(item, 0);
                }
            }
            foreach (var line in text)
            {
                foreach (var word in wordsCount)
                {
                    if (line.Contains(word.Key,StringComparison.OrdinalIgnoreCase))
                    {
                        wordsCount[word.Key]++;
                    }
                }
            }

            foreach (var item in wordsCount.OrderByDescending(x=>x.Value))
            {
                string result = $"{item.Key} - {item.Value}{Environment.NewLine}";
                File.AppendAllText(@"..\..\..\finalOutput.txt",result);
            }
            
---

 string[] lines = File.ReadAllLines(@"..\..\..\input.txt");
            for (int i = 0; i < lines.Length; i++)
            {
                int letternum = lines[i].Count(x => char.IsLetter(x));
                int punctnum = lines[i].Count(x => char.IsPunctuation(x));

                File.AppendAllText(@"..\..\..\output.txt", $"Line {i + 1}: {lines[i]} ({letternum})({punctnum}){Environment.NewLine}");

            }


